name: PHPUnit

on:
  push:
    branches:
      - main
  pull_request:

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name for pull requests
  # or the commit hash for any other events.
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  run:
    name: ${{ matrix.php }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        php: [ '7.3', '7.4', '8.0', '8.1', '8.2', '8.3' ]
        include:
          - php: '7.3'
            os: ubuntu-latest
            report: true

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}

      - name: Log debug information
        run: |
          git --version
          php --version
          php -i
          composer --version

      # This date is used to ensure that the Composer cache is refreshed at least once every week.
      # http://man7.org/linux/man-pages/man1/date.1.html
      - name: "Get last Monday's date"
        id: get-date
        run: echo "::set-output name=date::$(/bin/date -u --date='last Mon' "+%F")"

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@26968a09c0ea4f3e233fdddbafd1166051a095f6 # v2.1.4
        env:
          cache-name: cache-composer-dependencies
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ matrix.php }}-date-${{ steps.get-date.outputs.date }}-composer-${{ hashFiles('**/composer.json') }}

      - name: Install Composer dependencies
        run: composer install

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit

      - name: Run (xDebug) tests
        if: ${{ matrix.report }}
        run: |
          vendor/bin/phpunit --verbose --coverage-clover=tmp/coverage/report-xml/php-coverage1.xml
          bash <(curl -s https://codecov.io/bash);
